// <auto-generated />
using System;
using BackendApi_Vol.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BackendApi_Vol.Migrations
{
    [DbContext(typeof(OnlinestoreContext))]
    partial class OnlinestoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BackendApi_Vol.Models.Courier", b =>
                {
                    b.Property<int>("IdCourier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_courier");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCourier"), 1L, 1);

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("is_delete")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("NameCourier")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name_courier");

                    b.Property<string>("Patronymic")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("Rating")
                        .HasColumnType("int")
                        .HasColumnName("rating");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdCourier")
                        .HasName("PK__Courier__3E05CEFE19329956");

                    b.ToTable("Courier", (string)null);
                });

            modelBuilder.Entity("BackendApi_Vol.Models.Delivery", b =>
                {
                    b.Property<int>("IdDelivery")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_delivery");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDelivery"), 1L, 1);

                    b.Property<string>("DeliveryMethod")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("delivery_method");

                    b.Property<int?>("IdCourier")
                        .HasColumnType("int")
                        .HasColumnName("id_courier");

                    b.Property<int?>("IdTransport")
                        .HasColumnType("int")
                        .HasColumnName("id_transport");

                    b.Property<bool?>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("is_delete")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("IdDelivery")
                        .HasName("PK__Delivery__D7513687E2B9990D");

                    b.HasIndex("IdCourier");

                    b.HasIndex("IdTransport");

                    b.ToTable("Delivery", (string)null);
                });

            modelBuilder.Entity("BackendApi_Vol.Models.Manufacturer", b =>
                {
                    b.Property<int>("IdManufacturer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_manufacturer");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdManufacturer"), 1L, 1);

                    b.Property<int?>("Apartment")
                        .HasColumnType("int")
                        .HasColumnName("apartment");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Entrance")
                        .HasColumnType("int")
                        .HasColumnName("entrance");

                    b.Property<string>("House")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("house");

                    b.Property<int>("IndexUs")
                        .HasColumnType("int")
                        .HasColumnName("index_us");

                    b.Property<bool?>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("is_delete")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ManufName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Manuf_name");

                    b.Property<int?>("NumFloor")
                        .HasColumnType("int")
                        .HasColumnName("num_floor");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdManufacturer")
                        .HasName("PK__Manufact__0F53B9C356E64E9E");

                    b.ToTable("Manufacturer", (string)null);
                });

            modelBuilder.Entity("BackendApi_Vol.Models.OrderContent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CountProduct")
                        .HasColumnType("int")
                        .HasColumnName("count_product");

                    b.Property<int>("IdOrder")
                        .HasColumnType("int")
                        .HasColumnName("id_order");

                    b.Property<int>("IdProduct")
                        .HasColumnType("int")
                        .HasColumnName("id_product");

                    b.Property<bool?>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("is_delete")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Packaging")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("packaging");

                    b.HasKey("Id");

                    b.HasIndex("IdOrder");

                    b.HasIndex("IdProduct");

                    b.HasIndex("Packaging");

                    b.ToTable("Order_Contents", (string)null);
                });

            modelBuilder.Entity("BackendApi_Vol.Models.Payment", b =>
                {
                    b.Property<int>("IdPayment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_payment");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPayment"), 1L, 1);

                    b.Property<string>("Currency")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("IdCard")
                        .HasColumnType("int")
                        .HasColumnName("Id_card");

                    b.Property<bool?>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("is_delete")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("payment_method");

                    b.HasKey("IdPayment")
                        .HasName("PK__Payment__862FEFE083D0629A");

                    b.HasIndex("IdCard");

                    b.ToTable("Payment", (string)null);
                });

            modelBuilder.Entity("BackendApi_Vol.Models.Product", b =>
                {
                    b.Property<int>("IdProduct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_product");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProduct"), 1L, 1);

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Color")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CountInBox")
                        .HasColumnType("int")
                        .HasColumnName("Count_in_box");

                    b.Property<int>("CountProductOnWarehouse")
                        .HasColumnType("int")
                        .HasColumnName("Count_product_on_warehouse");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("country");

                    b.Property<int>("ExpirationDate")
                        .HasColumnType("int")
                        .HasColumnName("expiration_date");

                    b.Property<int>("IdManufacturer")
                        .HasColumnType("int")
                        .HasColumnName("id_manufacturer");

                    b.Property<string>("ImagePr")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("image_pr");

                    b.Property<string>("Information")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("information");

                    b.Property<bool?>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("is_delete")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal>("Price")
                        .HasColumnType("money")
                        .HasColumnName("price");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("product_name");

                    b.Property<DateTime>("ProductionDate")
                        .HasColumnType("date")
                        .HasColumnName("production_date");

                    b.Property<decimal>("WeightPr")
                        .HasColumnType("decimal(10,1)")
                        .HasColumnName("weight_pr");

                    b.HasKey("IdProduct")
                        .HasName("PK__Product__BA39E84F564333C8");

                    b.HasIndex("Category");

                    b.HasIndex("IdManufacturer");

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("BackendApi_Vol.Models.ProductCategory", b =>
                {
                    b.Property<string>("Category")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Information")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("information");

                    b.Property<bool?>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("is_delete")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("Category")
                        .HasName("PK__Product___4BB73C334359DFAA");

                    b.ToTable("Product_Category", (string)null);
                });

            modelBuilder.Entity("BackendApi_Vol.Models.ProductPackaging", b =>
                {
                    b.Property<string>("Packaging")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("packaging");

                    b.Property<bool?>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("is_delete")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal>("Price")
                        .HasColumnType("money")
                        .HasColumnName("price");

                    b.Property<int>("Quality")
                        .HasColumnType("int")
                        .HasColumnName("quality");

                    b.HasKey("Packaging")
                        .HasName("PK__Product___9D09D5A93F97C0EE");

                    b.ToTable("Product_Packaging", (string)null);
                });

            modelBuilder.Entity("BackendApi_Vol.Models.SiteUser", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_user");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUser"), 1L, 1);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Company")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("date")
                        .HasColumnName("Date_of_birth");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("is_delete")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("NameUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name_user");

                    b.Property<string>("Patronymic")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdUser")
                        .HasName("PK__Site_Use__B607F2480EF92801");

                    b.ToTable("Site_User", (string)null);
                });

            modelBuilder.Entity("BackendApi_Vol.Models.Transport", b =>
                {
                    b.Property<int>("IdTransport")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_transport");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTransport"), 1L, 1);

                    b.Property<bool?>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("is_delete")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("NumberTr")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("number_tr");

                    b.Property<string>("TransportName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("transport_name");

                    b.HasKey("IdTransport")
                        .HasName("PK__Transpor__A387EDD46BD49627");

                    b.ToTable("Transport", (string)null);
                });

            modelBuilder.Entity("BackendApi_Vol.Models.UserCard", b =>
                {
                    b.Property<int>("IdCard")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_card");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCard"), 1L, 1);

                    b.Property<int>("IdUser")
                        .HasColumnType("int")
                        .HasColumnName("Id_user");

                    b.Property<bool?>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("is_delete")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("NumberCard")
                        .HasColumnType("int")
                        .HasColumnName("number_card");

                    b.HasKey("IdCard")
                        .HasName("PK__User_Car__549380B9B15099AC");

                    b.HasIndex("IdUser");

                    b.ToTable("User_Card", (string)null);
                });

            modelBuilder.Entity("BackendApi_Vol.Models.UserOrder", b =>
                {
                    b.Property<int>("IdOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_order");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOrder"), 1L, 1);

                    b.Property<int?>("Apartment")
                        .HasColumnType("int")
                        .HasColumnName("apartment");

                    b.Property<int?>("AssemblyPeriod")
                        .HasColumnType("int")
                        .HasColumnName("assembly_period");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Entrance")
                        .HasColumnType("int")
                        .HasColumnName("entrance");

                    b.Property<string>("House")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("house");

                    b.Property<int>("IdDelivery")
                        .HasColumnType("int")
                        .HasColumnName("id_delivery");

                    b.Property<int>("IdPayment")
                        .HasColumnType("int")
                        .HasColumnName("id_payment");

                    b.Property<int>("IdUser")
                        .HasColumnType("int")
                        .HasColumnName("Id_user");

                    b.Property<int>("IndexUs")
                        .HasColumnType("int")
                        .HasColumnName("index_us");

                    b.Property<string>("Information")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("information");

                    b.Property<bool?>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("is_delete")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("NumFloor")
                        .HasColumnType("int")
                        .HasColumnName("num_floor");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("date")
                        .HasColumnName("order_date");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdOrder")
                        .HasName("PK__User_Ord__DD5B8F3F09A590E8");

                    b.HasIndex("IdDelivery");

                    b.HasIndex("IdPayment");

                    b.HasIndex("IdUser");

                    b.ToTable("User_Order", (string)null);
                });

            modelBuilder.Entity("BackendApi_Vol.Models.Delivery", b =>
                {
                    b.HasOne("BackendApi_Vol.Models.Courier", "IdCourierNavigation")
                        .WithMany("Deliveries")
                        .HasForeignKey("IdCourier")
                        .HasConstraintName("FK__Delivery__id_cou__06CD04F7");

                    b.HasOne("BackendApi_Vol.Models.Transport", "IdTransportNavigation")
                        .WithMany("Deliveries")
                        .HasForeignKey("IdTransport")
                        .HasConstraintName("FK__Delivery__id_tra__07C12930");

                    b.Navigation("IdCourierNavigation");

                    b.Navigation("IdTransportNavigation");
                });

            modelBuilder.Entity("BackendApi_Vol.Models.OrderContent", b =>
                {
                    b.HasOne("BackendApi_Vol.Models.UserOrder", "IdOrderNavigation")
                        .WithMany("OrderContents")
                        .HasForeignKey("IdOrder")
                        .IsRequired()
                        .HasConstraintName("FK__Order_Con__id_or__208CD6FA");

                    b.HasOne("BackendApi_Vol.Models.Product", "IdProductNavigation")
                        .WithMany("OrderContents")
                        .HasForeignKey("IdProduct")
                        .IsRequired()
                        .HasConstraintName("FK__Order_Con__id_pr__2180FB33");

                    b.HasOne("BackendApi_Vol.Models.ProductPackaging", "PackagingNavigation")
                        .WithMany("OrderContents")
                        .HasForeignKey("Packaging")
                        .IsRequired()
                        .HasConstraintName("FK__Order_Con__packa__22751F6C");

                    b.Navigation("IdOrderNavigation");

                    b.Navigation("IdProductNavigation");

                    b.Navigation("PackagingNavigation");
                });

            modelBuilder.Entity("BackendApi_Vol.Models.Payment", b =>
                {
                    b.HasOne("BackendApi_Vol.Models.UserCard", "IdCardNavigation")
                        .WithMany("Payments")
                        .HasForeignKey("IdCard")
                        .IsRequired()
                        .HasConstraintName("FK__Payment__Id_card__7D439ABD");

                    b.Navigation("IdCardNavigation");
                });

            modelBuilder.Entity("BackendApi_Vol.Models.Product", b =>
                {
                    b.HasOne("BackendApi_Vol.Models.ProductCategory", "CategoryNavigation")
                        .WithMany("Products")
                        .HasForeignKey("Category")
                        .IsRequired()
                        .HasConstraintName("FK__Product__Categor__1BC821DD");

                    b.HasOne("BackendApi_Vol.Models.Manufacturer", "IdManufacturerNavigation")
                        .WithMany("Products")
                        .HasForeignKey("IdManufacturer")
                        .IsRequired()
                        .HasConstraintName("FK__Product__id_manu__1CBC4616");

                    b.Navigation("CategoryNavigation");

                    b.Navigation("IdManufacturerNavigation");
                });

            modelBuilder.Entity("BackendApi_Vol.Models.UserCard", b =>
                {
                    b.HasOne("BackendApi_Vol.Models.SiteUser", "IdUserNavigation")
                        .WithMany("UserCards")
                        .HasForeignKey("IdUser")
                        .IsRequired()
                        .HasConstraintName("FK__User_Card__is_de__797309D9");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("BackendApi_Vol.Models.UserOrder", b =>
                {
                    b.HasOne("BackendApi_Vol.Models.Delivery", "IdDeliveryNavigation")
                        .WithMany("UserOrders")
                        .HasForeignKey("IdDelivery")
                        .IsRequired()
                        .HasConstraintName("FK__User_Orde__id_de__0E6E26BF");

                    b.HasOne("BackendApi_Vol.Models.Payment", "IdPaymentNavigation")
                        .WithMany("UserOrders")
                        .HasForeignKey("IdPayment")
                        .IsRequired()
                        .HasConstraintName("FK__User_Orde__id_pa__0D7A0286");

                    b.HasOne("BackendApi_Vol.Models.SiteUser", "IdUserNavigation")
                        .WithMany("UserOrders")
                        .HasForeignKey("IdUser")
                        .IsRequired()
                        .HasConstraintName("FK__User_Orde__Id_us__0C85DE4D");

                    b.Navigation("IdDeliveryNavigation");

                    b.Navigation("IdPaymentNavigation");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("BackendApi_Vol.Models.Courier", b =>
                {
                    b.Navigation("Deliveries");
                });

            modelBuilder.Entity("BackendApi_Vol.Models.Delivery", b =>
                {
                    b.Navigation("UserOrders");
                });

            modelBuilder.Entity("BackendApi_Vol.Models.Manufacturer", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("BackendApi_Vol.Models.Payment", b =>
                {
                    b.Navigation("UserOrders");
                });

            modelBuilder.Entity("BackendApi_Vol.Models.Product", b =>
                {
                    b.Navigation("OrderContents");
                });

            modelBuilder.Entity("BackendApi_Vol.Models.ProductCategory", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("BackendApi_Vol.Models.ProductPackaging", b =>
                {
                    b.Navigation("OrderContents");
                });

            modelBuilder.Entity("BackendApi_Vol.Models.SiteUser", b =>
                {
                    b.Navigation("UserCards");

                    b.Navigation("UserOrders");
                });

            modelBuilder.Entity("BackendApi_Vol.Models.Transport", b =>
                {
                    b.Navigation("Deliveries");
                });

            modelBuilder.Entity("BackendApi_Vol.Models.UserCard", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("BackendApi_Vol.Models.UserOrder", b =>
                {
                    b.Navigation("OrderContents");
                });
#pragma warning restore 612, 618
        }
    }
}
